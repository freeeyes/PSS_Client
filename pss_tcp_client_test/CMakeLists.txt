cmake_minimum_required(VERSION 3.0)
PROJECT(test_pss_client)

if(UNIX)
	set(BIN_OUTPUT_DIR ${PROJECT_SOURCE_DIR}/bin)
	set(LIB_OUTPUT_DIR ${PROJECT_SOURCE_DIR}/bin)
	
	#linux
	include(CheckCXXCompilerFlag)
	CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
	if(COMPILER_SUPPORTS_CXX11)
		message("set C++ 11...")
		set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
	endif()	
else()
	set(BIN_OUTPUT_DIR ${PROJECT_SOURCE_DIR}/bin)
	set(LIB_OUTPUT_DIR ${PROJECT_SOURCE_DIR}/bin)
	set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG "${BIN_OUTPUT_DIR}")
	set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE "${BIN_OUTPUT_DIR}")
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG "${BIN_OUTPUT_DIR}")
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE "${BIN_OUTPUT_DIR}")
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG "${BIN_OUTPUT_DIR}")
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE "${BIN_OUTPUT_DIR}")
endif()

file(GLOB MAIN_FILES *.cpp)
source_group("main_file" FILES ${MAIN_FILES})

include_directories(
	${PROJECT_SOURCE_DIR}/Include/
	${PROJECT_SOURCE_DIR}/)

link_directories(../pss_tcp_client/lib/)

add_executable(${PROJECT_NAME} 
	${MAIN_FILES}
	)

if(UNIX)
	message("set linux so link...")
	target_link_libraries(${PROJECT_NAME} pthread pss_client)	
endif()

set_target_properties(${PROJECT_NAME} PROPERTIES 
	OUTPUT_NAME_DEBUG ${PROJECT_NAME}
	ARCHIVE_OUTPUT_DIRECTORY ${BIN_OUTPUT_DIR}
    RUNTIME_OUTPUT_DIRECTORY ${BIN_OUTPUT_DIR}
    LIBRARY_OUTPUT_DIRECTORY ${BIN_OUTPUT_DIR})
